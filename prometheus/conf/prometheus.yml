global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  scrape_timeout: 15s
  # scrape_timeout is set to the global default (10s).
  query_log_file: /var/logs/prometheus/query.log
  scrape_failure_log_file: /var/logs/prometheus/scrape_failure.log

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
# - "first_rules.yml"
# - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'loki'
    static_configs:
      - targets: [ '172.28.10.7:3100' ]
  - job_name: 'prometheus'
    static_configs:
      - targets: [ 'localhost:9090' ]
  - job_name: 'grafana'
    static_configs:
      - targets: [ '172.28.10.9:3000' ]
  - job_name: 'apaas'
    static_configs:
      - targets: [ '172.28.10.10:33444' ]
  
  # 实现同域名多路径的 metrcis 爬取
  # 方式一
  # 使用多个 job_name
  # - job_name: "tenant_id_namespace"
  #   metrics_path: /:tenant_id_namespace/metrics
  #   static_configs:
  #     - targets: ["172.28.10.10:33444"]
  
  # 方式二
  # 使用 relabel_configs
  # - job_name: 'apaas'
  #   metrics_path: '/metrics'  # 默认路径，会被替换
  #   static_configs:
  #     - targets: ['172.28.10.10:33444']
  #       labels:
  #         __metrics_path__: '/390_package_7a2002__c/metrics'
  #     - targets: ['172.28.10.10:33444']
  #       labels:
  #         __metrics_path__: '/100_ICIM/metrics'

